/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample C++ project to get you started.
 * For more details take a look at the Building C++ applications and libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_cpp_projects.html
 */

plugins {
  id 'cpp-application'
  id 'cpp-unit-test'
}

application {
  source.from file('src/main/src') 
  source.from file('src/main/strategy/concept') 
  source.from file('src/main/strategy/coroutine') 
  source.from file('src/main/strategy/futurepromise') 
  source.from file('src/main/strategy/lambda') 
  source.from file('src/main/strategy/range') 
  privateHeaders.from file('src/main/include')
  privateHeaders.from file('src/main/strategy/concept') 
  privateHeaders.from file('src/main/strategy/coroutine') 
  privateHeaders.from file('src/main/strategy/futurepromise') 
  privateHeaders.from file('src/main/strategy/lambda') 
  privateHeaders.from file('src/main/strategy/range') 

  targetMachines.add(machines.macOS.architecture("aarch64"))
  targetMachines.add(machines.linux.architecture("x86_64"))
}

unitTest {
  source.from file('src/test/src/')
  privateHeaders.from file('src/main/include')
    
  targetMachines.add(machines.macOS.architecture("aarch64"))
  targetMachines.add(machines.linux.architecture("x86_64"))
}

tasks.withType(CppCompile).configureEach {
  compilerArgs.add '-fPIC'
  compilerArgs.add '-Wall'
  compilerArgs.add '-std=c++2a'
  compilerArgs.add '-pthread'
  compilerArgs.add '-Werror'
  compilerArgs.add '-Wextra'
  compilerArgs.add '-Wno-long-long'
  
  //compilerArgs.add '-fcoroutines'
  //compilerArgs.add '-H'
}

tasks.withType(LinkExecutable).configureEach {
  linkerArgs.add '-v'
  linkerArgs.add '-Werror' 
  linkerArgs.add '-pthread'
}

tasks.withType(RunTestExecutable).configureEach {
  enabled = false
}

